export CLICOLOR=1
export LSCOLORS=GxFxCxDxBxegedabagaced

if [ -n "$BASH_VERSION" ]; then
	test -e "${HOME}/.iterm2_shell_integration.bash" && source "${HOME}/.iterm2_shell_integration.bash"
fi

alias octave='/usr/local/octave/3.8.0/bin/octave-3.8.0'
alias pycharm='/Applications/PyCharm\ CE.app/Contents/MacOS/pycharm &'

alias vim='test -S /tmp/nvimsocket -a x$(pgrep nvim) != x && echo "vim already started, use nvr to operate." || NVIM_LISTEN_ADDRESS=/tmp/nvimsocket nvim -u ~/.config/nvim_back/init.vim'
alias v='/snap/bin/nvim -u ~/.config/nvim_back/init.vim'
alias ccc="source $HOME/bin/ccc"

export PATH=/usr/local/opt/mysql-client/bin:/usr/local/sbin:/usr/local/usr/bin:$GOPATH/bin:/usr/local/lib/ruby/gems/2.5.0/bin/:$PATH
export SPORT=29932
export CLASSPATH=".:/usr/local/lib/antlr-4.8-complete.jar:$CLASSPATH"

PROXY_URL='http://127.0.0.1:7890'

export SHELL=$(which zsh)

__conda_setup="$('/Users/v/anaconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/v/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/Users/v/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/Users/v/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup

#source activate torch

test -e /usr/libexec/java_home && export JAVA_HOME=$(/usr/libexec/java_home)

# Get list of gnubin directories
if type brew &>/dev/null; then
  HOMEBREW_PREFIX=$(brew --prefix)
  # gnubin; gnuman
  for d in ${HOMEBREW_PREFIX}/opt/*/libexec/gnubin; do export PATH=$d:$PATH; done
  # I actually like that man grep gives the BSD grep man page
  #for d in ${HOMEBREW_PREFIX}/opt/*/libexec/gnuman; do export MANPATH=$d:$MANPATH; done
fi

# for cross compilation
#. /Applications/Xcode.app/Contents/Developer/usr/share/git-core/git-completion.bash
#. /Applications/Xcode.app/Contents/Developer/usr/share/git-core/git-prompt.sh
#
#export GIT_PS1_SHOWDIRTYSTATE=1
#export GIT_PS1_SHOWSTASHSTATE=1
#export GIT_PS1_SHOWCOLORHINTS=1
##export GIT_PS1_SHOWUNTRACKEDFILES=1
#export GIT_PS1_SHOWUPSTREAM="auto"
export ANDROID_HOME=$HOME/Library/Android/sdk
#eval "$(/home/v/miniconda3/bin/conda shell.YOUR_SHELL_NAME hook)"
#source /home/v/.nix-profile/etc/profile.d/nix.sh
###-begin-leetcode-completions-###
#
# yargs command completion script
#
# Installation: leetcode completion >> ~/.bashrc
#    or leetcode completion >> ~/.bash_profile on OSX.
#
_yargs_completions()
{
    local cur_word args type_list

    cur_word="${COMP_WORDS[COMP_CWORD]}"
    args=("${COMP_WORDS[@]}")

    # ask yargs to generate completions.
    type_list=$(leetcode --get-yargs-completions "${args[@]}")

    COMPREPLY=( $(compgen -W "${type_list}" -- ${cur_word}) )

    # if no match was found, fall back to filename completion
    if [ ${#COMPREPLY[@]} -eq 0 ]; then
      COMPREPLY=( $(compgen -f -- "${cur_word}" ) )
    fi

    return 0
}
complete -F _yargs_completions leetcode
###-end-leetcode-completions-###
alias lc='leetcode'
export EDITOR=/snap/bin/nvim
export QT_QPA_PLATFORM_PLUGIN_PATH=/usr/lib/x86_64-linux-gnu/qt5/plugins/platforms/

alias connect='fpipe | trap "" INT;  ncat localhost'
alias gdrive='gdrive  --service-account go-2-learn-00c8bf796e90.json'
stty eof ^\f
alias tmux="$HOME/.nix-profile/bin/tmux"
pgrep nix-daemon >/dev/null || ( sudo launchctl load /Library/LaunchDaemons/org.nixos.nix-daemon.plist && sudo launchctl start org.nixos.nix-daemon )
