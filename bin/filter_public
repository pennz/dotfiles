#!/bin/bash -x
BRANCH=master
RBRANCH=master

cd $HOME
RREPO_COPY=".dotfiles"
if [ ! -d "$HOME/$RREPO_COPY" ]; then
    git clone --mirror git@github.com:pennz/dotfiles.git $RREPO_COPY
    pushd $RREPO_COPY
    git update-ref -d refs/pull/1/head
    git update-ref -d refs/pull/2/head
    git update-ref -d refs/pull/3/head
    git update-ref -d refs/pull/4/head
    git update-ref -d refs/pull/5/head
    sed -i 's/fetch.*/fetch = +refs\/tags\/*:refs\/tags\/*\n\tfetch = +refs\/heads\/*:refs\/heads\/*/' config
    popd
else
    pushd $RREPO_COPY
    git update-ref -d refs/pull/1/head
    git update-ref -d refs/pull/2/head
    git update-ref -d refs/pull/3/head
    git update-ref -d refs/pull/4/head
    git update-ref -d refs/pull/5/head
    sed -i 's/fetch.*/fetch = +refs\/tags\/*:refs\/tags\/*\n\tfetch = +refs\/heads\/*:refs\/heads\/*/' config
    git fetch origin
    popd
fi

private_clone_repo="$HOME/.$(basename $HOME)"
if [ -d $private_clone_repo ]; then
    pushd $private_clone_repo
    git remote add local file://$HOME/ || true
else
    git clone --single-branch --branch ${BRANCH} file://$HOME/ $private_clone_repo
    pushd $private_clone_repo
fi

git checkout $BRANCH
git fetch local
git reset --hard local/$BRANCH

git filter-repo \
    --path-glob '.config/*.json' \
    --path-glob '.*history' \
    --path .lc \
    --path notes.md \
    --path .config/clash \
    --path .kaggle \
    --path bin/v2ray_client.json \
    --path bin/v2ray_router_client.json \
    --path .duckdns \
    --path .muttrc \
    --path .electrum \
    --path .pypirc \
    --path .ssh \
    --path works \
    --path bin/filter_public \
    --path bin/vtool \
    --path Sync/with_box/Passwords.kdbx \
    --path .glc.yml \
    --invert-paths

filter_result=$?
if [ ! $filter_result -eq 0 ]; then
    echo "git filter-repo failed."
    echo $PWD
    PS1="Merge>" bash
fi

TMP_BRNACH_NAME=TEMP_MASTER
git remote add public file://$HOME/$RREPO_COPY || true
git fetch public
git branch -D $TMP_BRNACH_NAME
git checkout -b $TMP_BRNACH_NAME --track public/$RBRANCH
git merge $BRANCH --no-edit --no-gpg-sign -m "Merge upstream changes"
merge_result=$?
if [ ! $merge_result -eq 0 ]; then
    echo "Failed when merge with branch \"$BRANCH\" to public/$RBRANCH. Please merge manually in subshell, exit when finished, it will continue."
    PS1="Merge>" bash
fi
grep F10 .tmux.conf && sed -i 's/F10/\`/' .tmux.conf && git add .tmux.conf && git commit -sm "Tmux: prefix use \`" --no-edit --no-gpg

#pushd $HOME/$RREPO_COPY
git push public HEAD:$RBRANCH
#popd

popd
#git push # push the secret one # don't need I think

pushd $HOME/.dotfiles
git push
popd
