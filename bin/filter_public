#!/bin/bash -x
BRANCH=good-day
RBRANCH=master

cd $HOME
RREPO_COPY=".dotfiles"
if [ ! -d "$HOME/$RREPO_COPY" ]; then
    git clone --mirror git@github.com:pennz/dotfiles.git $RREPO_COPY
    git update-ref -d refs/pull/1/head
    git update-ref -d refs/pull/2/head
    git update-ref -d refs/pull/3/head
    git update-ref -d refs/pull/4/head
    git update-ref -d refs/pull/5/head
    sed -i 's/fetch.*/fetch = +refs\/tags\/*:refs\/tags\/*\n\tfetch = +refs\/heads\/*:refs\/heads\/*/' $RREPO_COPY/config
else
    pushd $RREPO_COPY
    git fetch origin
    popd
fi

if [ -d "$HOME/$(basename $HOME)" ]; then
    pushd $(basename $HOME)
    git remote add local file://$HOME/ || true
    git fetch local
    git checkout $BRANCH
    git reset --hard local/$BRANCH
else
    git clone --single-branch --branch ${BRANCH} file://$HOME/
    pushd $(basename $HOME)
fi

git filter-repo \
    --path .lc \
    --path notes.md \
    --path .config/clash \
    --path .kaggle \
    --path bin/v2ray_client.json \
    --path bin/v2ray_router_client.json \
    --path-glob '.config/v2ray*.json' \
    --path-glob '.*history' \
    --path .duckdns \
    --path .muttrc \
    --path .electrum \
    --path .pypirc \
    --path works \
    --path bin/filter_public \
    --invert-paths
git remote add public file://$HOME/$RREPO_COPY || true
git fetch public
git branch -D $RBRANCH
git checkout --track public/$RBRANCH
git merge $BRANCH --no-edit --no-gpg-sign
if [ ! $? -eq 0 ]; then
    echo "Failed when merge with branch \"$BRANCH\". Please merge manually in subshell, exit when finished, it will continue."
    PS1="Merge>" bash
fi
git push

pushd $HOME/$RREPO_COPY
git push origin
popd

popd
